// Generated by CoffeeScript 1.6.2
(function() {
  var JSOG, assert, circular, decoded, encoded, inside, outside, roundtrip;

  assert = require('assert');

  JSOG = require('./JSOG');

  console.log("### Simple references ");

  inside = {
    name: 'thing'
  };

  outside = {
    inside1: inside,
    inside2: inside
  };

  encoded = JSOG.encode(outside);

  console.log("Encoded is:");

  console.log(JSON.stringify(encoded, void 0, 4));

  console.log("Outside after encoding is:");

  console.log(JSON.stringify(outside, void 0, 4));

  assert(!(outside['@id'] != null));

  assert(!(inside['@id'] != null));

  decoded = JSOG.decode(encoded);

  console.log("Decoded is:");

  console.log(JSON.stringify(decoded, void 0, 4));

  assert(decoded.inside1 === decoded.inside2);

  assert(decoded.inside1.name === 'thing');

  assert(!(decoded['@id'] != null));

  roundtrip = JSOG.parse(JSOG.stringify(outside));

  console.log("Roundtrip is:");

  console.log(JSON.stringify(roundtrip, void 0, 4));

  console.log("### Cyclic references ");

  circular = {};

  circular.me = circular;

  encoded = JSOG.encode(circular);

  console.log("Encoded: " + JSON.stringify(encoded, void 0, 4));

  assert(encoded['@id'] === 1);

  assert(encoded.me['@ref'] === 1);

  decoded = JSOG.decode(encoded);

  assert(decoded.me === decoded);

  assert(!(circular['@id'] != null));

}).call(this);
